const domParser=new DOMParser;const abortController=new AbortController;window.onbeforeunload=()=>abortController.abort();export class FetchResponse{document;headers;constructor(document,headers){this.document=document;this.headers=headers}get expires(){return this.headers.get("Expires")??-1}}export function fetchXml(input,init){init=fixInit(init);return fetch(input,init).then((async response=>new FetchResponse(domParser.parseFromString(await response.text(),"text/xml"),response.headers)))}export function fetchJson(input,init){init=fixInit(init);return fetch(input,init).then((async response=>new FetchResponse(await response.json(),response.headers)))}function fixInit(init){if(!init){return{signal:abortController.signal,cache:"default"}}if(!Object.hasOwn(init,"signal")){init.signal=abortController.signal}if(!Object.hasOwn(init,"cache")){init.cache="default"}return init}